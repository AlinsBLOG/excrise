<template>
  <div class="Home">
    <Head-Top head-title='项目'></Head-Top>
    <div class="search-div">
      <!-- <mt-field placeholder="搜索项目" class="input" @change='change' v-model='params.titleLike'></mt-field> -->
      <search 
        placeholder='请输入搜素项目'
        :auto-fixed='false'
        @on-submit='change'
        @on-cancel='cancel'
        @on-clear='cancel'
        v-model='params.titleLike'></search>
    </div>

    <router-link to="/project/sponsor" class='applyProject' v-if='selected == 1'>发起项目</router-link>

    <mt-navbar v-model="selected" class='projectTabNav'>
      <mt-tab-item v-for='(item, index) in tabContainer' :id="index+1+''" :key='index'>
        {{item.name}}
        <i :class="item.icon" slot='icon' ></i>
      </mt-tab-item>
    </mt-navbar>

    <!-- 项目状态 -->
    <div class="project-state">
      <span>项目状态</span>
      <div class="btn">
        <div @click='toApplyMessage'>申请项目审核信息</div>
        <div to="/project/userApply/2">用户申请项目审核</div>
      </div>
    </div>

    <!-- tab-container -->
    <mt-tab-container>
      <ul
          v-infinite-scroll="loadMore"
          class='ul'
          infinite-scroll-disabled="loading"
          infinite-scroll-distance="10">
        <mt-tab-container-item v-for='(item,index) in list' :key='index'>
          <div @click='moreInfo(item.id)'>
            <mt-cell :title="item.title" :is-link='isLink'>
              <mt-button size="small" type='primary' v-if='isApply' @click.stop.prevent='apply(item.id)' class='applyClass'>申请</mt-button>
              <div class="progress" v-if='isCertain'>
                项目进行中进度
                <span>60%</span>
              </div>
              <mt-button v-if='isCertain' size="small" type='primary' @click.stop.prevent='certain' class='certainClass'>确认完成</mt-button>
            </mt-cell>
          </div>
        </mt-tab-container-item>
      </ul>
    </mt-tab-container>
    <span class="load-finsh" v-if='!loadingMore'>加载完成</span>
    <Home-Footer></Home-Footer>
  </div>
</template>

<script>
  import { mapState,mapMutations,mapGetters  } from 'vuex'
  import HeadTop from '@/components/header/head'
  import HomeFooter from '@/pages/footer'
  import { MessageBox, Toast } from "mint-ui"
  import { projectList } from '@/service/getData'

  export default {
    name:"ProjectInfo",
    data(){
      return{
        tabContainer: [{
          name: '发起',
          icon: 'iconfont icon-click'
        },{
          name: '申请',
          icon: 'iconfont icon-hand'
        },{
          name: '进行中',
          icon: 'iconfont icon-circle-up'
        },{
          name: '已完成',
          icon: 'iconfont icon-circle-check'
        },{
          name: '全部',
          icon: 'iconfont icon-all'
        }],
        loading: false,
        loadingMore: true,
        list: [],
        selected: '1',
        isLink: true,
        isApply: false,
        isCertain: false,
        params: {
          pageNo: 1,
          pageSize: 10,
          titleLike: ''
        }
      }
    },
    components:{
      HomeFooter,
      HeadTop,
    },
    mounted:function(){

    },
    computed: {
      ...mapState([
        'userInfo'
      ])
    },
    methods:{
      ...mapMutations(['SET_LOADING']),

      certain () {
        console.log(1)
      },

      async loadMore () {
        const that = this
        if (this.loadingMore) {
          that.SET_LOADING(true)
          that.loading = true
          await projectList(this.params).then(res => {
            if (that.params.pageNo >= res.pageCount) {
              that.loadingMore = false
              that.loading = true
            } else {
              that.loading = false
            }
            if (res.data && res.data.length) {
              that.list = that.list.concat(res.data)
            }
            that.params.pageNo = that.params.pageNo + 1
            that.SET_LOADING(false)
          }).catch(err => {
            that.loadingMore = false
          })
        }
      },

      moreInfo (id) {
        this.$router.push({
          path: `/project/info/${id}`
        })
      },

      apply (id) {
        this.$router.push({
          path: `/project/info/${id}`,
          query: {
            apply: true
          }
        })
      },

      change () {
        this.list = []
        this.loading = false
        this.loadingMore = true
        this.params.pageNo = 1
        this.loadMore()
      },

      cancel () {
        this.params.titleLike = ''
        this.change()
      },

      toApplyMessage () {
        if (this.checkUserInfo) {
          this.$router.push({
            path:'/project/applyMessage'
          })
        }
      },

      checkUserInfo () {
        if (!this.userInfo) {
          MessageBox.confirm('请先登录再申请项目').then(action => {
            if (action == 'confirm') {
              this.$router.push({
                path:'/login'
              })
            }
          })
          return false
        }
        return true
      }

    },
    watch: {
      selected (value) {
        (value == 1 || value == 4 || value == 5) ? this.isLink = true : this.isLink = false
        value == 2 ? this.isApply = true : this.isApply = false
        value == 3 ? this.isCertain = true : this.isCertain = false
      }
    }
  }
</script>

<style lang="stylus" scoped>
  @import '../../styles/mixin.stylus';

  .vux-search-box {
    font-size: 16px;
  }
  .mint-tab-item >>> .mint-tab-item-label {
    font-size: .3rem;
  }
  >>> .applyClass.mint-button--primary {
    background-color: #fff;
    color: red;
    border: 1px solid red;
    height: .85rem;
  } 
  >>> .certainClass.mint-button--primary {
    background-color: $cbutton;
    height: .85rem;
  }
  .Home {
    .ul {
      width: 100%;
      .mint-cell {
        min-height: 1.6rem;
      }
    }
    .loadMore-class{
      display: block;
      font-size: .4rem;
      color: gray;
      line-height: 1rem;
      text-align: center;
    }
    .progress {
      font-size: .4rem;
      margin-right: .8rem;
      span {
        color: #333;
        margin-left: .2rem;
      }
    }
    .project-state {
      background-color: #fff;
      margin: 7px 0;
      vertical-align: middle;
      display: flex;
      padding: .3rem 0;
      justify-content: space-around;
      span {
        display: inline-block;
        padding: .2rem;
        font-size: .4rem;
      }
      .btn {
        font-size: .5rem;
        div {
          background-color: $cbutton;
          display: inline-block;
          font-size: .4rem;
          color: #fff;
          padding: .15rem .3rem;
          border-radius: .1rem;
        }
      }
    }
    .projectTabNav {
      i {
        font-size: .6rem;
      }
      >>> .mint-tab-item-icon {
        width: auto;
        height: auto;
      }
      >>> .mint-tab-item {
        padding: 0 0 5px;
      }
      >>> .mint-tab-item.is-selected {
        color: $cglobal;;
        border-bottom-color: $cglobal;
      }
      >>> .mint-tab-item-icon {
        margin: 0 auto;
      }
    }
    >>> .mint-cell-text {
      font-size: .4rem;
      color: rgb(122,122,122);
    }
  }
  .mint-navbar .mint-tab-item.is-selected{
    margin-bottom: 0;
  }
  .mint-tab-item-label {
    font-size: .3rem !important;
  }
  .load-finsh {
    margin-bottom: 1.3rem;
    display: block;
    font-size: .4rem;
    color: gray;
    line-height: 1rem;
    text-align: center;
  }
  .applyProject {
    display: block;
    width: 92%;
    margin: 10px auto;
    border-radius: 5px;
    height: 1.3rem;
    line-height: 1.3rem;
    text-align: center;
    background-color: $cbutton;
    font-size: .5rem;
    color: #fff;
  }
</style>

